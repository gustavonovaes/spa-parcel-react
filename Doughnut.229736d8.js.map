{"version":3,"sources":["../src/components/Charts/Doughnut.js"],"names":["Doughnut","React","useState","getData","data","setData","intervalHandler","setIntervalHandler","useEffect","setInterval","clearInterval","labels","datasets","getRandomInt","backgroundColor","hoverBackgroundColor","min","max","Math","floor","random","defaults","global","responsive","memo"],"mappings":";AAkDe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAlDf,IAAA,EAAA,EAAA,QAAA,UACA,EAAA,QAAA,mBAiDe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wDAAA,SAAA,EAAA,EAAA,GAAA,GAAA,OAAA,YAAA,OAAA,IAAA,uBAAA,OAAA,UAAA,SAAA,KAAA,GAAA,CAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EA7Cf,SAASA,IACiBC,IADN,EAAA,EACMA,EAAMC,QAAAA,SAASC,KADrB,GACXC,EADW,EAAA,GACLC,EADK,EAAA,GAAA,EAAA,EAE4BJ,EAAMC,QAAAA,SAAS,GAF3C,GAEXI,EAFW,EAAA,GAEMC,EAFN,EAAA,GAeX,OAXDC,EAAAA,QAAAA,UAAU,WAEP,OADPD,EAAmBE,YAAY,WAO/BJ,EAAQF,MAP4C,MAC7C,WACLO,cAAcJ,KAEf,IAMI,EAAC,QAAA,cAAA,EAAD,SAAA,CAAgB,KAAMF,IAG/B,SAASD,IACA,MAAA,CACLQ,OAAQ,CACN,OACA,QACA,UAEFC,SAAU,CAAC,CACTR,KAAM,CAACS,EAAa,IAAK,KAAMA,EAAa,GAAI,KAAMA,EAAa,EAAG,KACtEC,gBAAiB,CACf,UACA,UACA,WAEFC,qBAAsB,CACpB,UACA,UACA,cAMR,SAASF,EAAaG,EAAKC,GAClBC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,EA5CvDK,EAASC,SAAAA,OAAOC,YAAa,EA+CdtB,IAAAA,EAAAA,EAAMuB,QAAAA,KAAKxB,GAAX,QAAA,QAAA","file":"Doughnut.229736d8.js","sourceRoot":"../public","sourcesContent":["import React from \"react\";\nimport { Doughnut as DoughnutCharjs, defaults } from \"react-chartjs-2\";\n\ndefaults.global.responsive = true;\n\nfunction Doughnut() {\n  const [data, setData] = React.useState(getData());\n  const [intervalHandler, setIntervalHandler] = React.useState(0);\n\n  React.useEffect(() => {\n    setIntervalHandler(setInterval(() => updateState(), 3000));\n    return () => {\n      clearInterval(intervalHandler);\n    }\n  }, []);\n\n  function updateState() {\n    setData(getData());\n  }\n\n  return <DoughnutCharjs data={data} />\n}\n\nfunction getData() {\n  return {\n    labels: [\n      'Blue',\n      'Green',\n      'Yellow'\n    ],\n    datasets: [{\n      data: [getRandomInt(150, 280), getRandomInt(60, 150), getRandomInt(0, 60)],\n      backgroundColor: [\n        '#076E95',\n        '#4BB543',\n        '#FFCE56'\n      ],\n      hoverBackgroundColor: [\n        '#076E95',\n        '#4BB543',\n        '#FFCE56'\n      ]\n    }]\n  }\n}\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default React.memo(Doughnut);"]}
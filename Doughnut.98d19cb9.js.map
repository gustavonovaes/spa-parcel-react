{"version":3,"sources":["../src/components/Charts/Doughnut.js"],"names":["defaults","global","responsive","Doughnut","React","useState","getData","data","setData","intervalHandler","setIntervalHandler","useEffect","setInterval","updateState","clearInterval","labels","datasets","getRandomInt","backgroundColor","hoverBackgroundColor","min","max","Math","floor","random","memo"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;AAEAA,uBAASC,MAAT,CAAgBC,UAAhB,GAA6B,IAA7B;;AAEA,SAASC,QAAT,GAAoB;AAAA,wBACMC,eAAMC,QAAN,CAAeC,OAAO,EAAtB,CADN;AAAA;AAAA,MACXC,IADW;AAAA,MACLC,OADK;;AAAA,yBAE4BJ,eAAMC,QAAN,CAAe,CAAf,CAF5B;AAAA;AAAA,MAEXI,eAFW;AAAA,MAEMC,kBAFN;;AAIlBN,iBAAMO,SAAN,CAAgB,YAAM;AACpBD,IAAAA,kBAAkB,CAACE,WAAW,CAAC;AAAA,aAAMC,WAAW,EAAjB;AAAA,KAAD,EAAsB,IAAtB,CAAZ,CAAlB;AACA,WAAO,YAAM;AACXC,MAAAA,aAAa,CAACL,eAAD,CAAb;AACD,KAFD;AAGD,GALD,EAKG,EALH;;AAOA,WAASI,WAAT,GAAuB;AACrBL,IAAAA,OAAO,CAACF,OAAO,EAAR,CAAP;AACD;;AAED,SAAO,6BAAC,sBAAD;AAAgB,IAAA,IAAI,EAAEC;AAAtB,IAAP;AACD;;AAED,SAASD,OAAT,GAAmB;AACjB,SAAO;AACLS,IAAAA,MAAM,EAAE,CACN,MADM,EAEN,OAFM,EAGN,QAHM,CADH;AAMLC,IAAAA,QAAQ,EAAE,CAAC;AACTT,MAAAA,IAAI,EAAE,CAACU,YAAY,CAAC,GAAD,EAAM,GAAN,CAAb,EAAyBA,YAAY,CAAC,EAAD,EAAK,GAAL,CAArC,EAAgDA,YAAY,CAAC,CAAD,EAAI,EAAJ,CAA5D,CADG;AAETC,MAAAA,eAAe,EAAE,CACf,SADe,EAEf,SAFe,EAGf,SAHe,CAFR;AAOTC,MAAAA,oBAAoB,EAAE,CACpB,SADoB,EAEpB,SAFoB,EAGpB,SAHoB;AAPb,KAAD;AANL,GAAP;AAoBD;;AAED,SAASF,YAAT,CAAsBG,GAAtB,EAA2BC,GAA3B,EAAgC;AAC9B,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACD;;eAEchB,eAAMqB,IAAN,CAAWtB,QAAX","file":"Doughnut.98d19cb9.js","sourceRoot":"../public","sourcesContent":["import React from \"react\";\nimport { Doughnut as DoughnutCharjs, defaults } from \"react-chartjs-2\";\n\ndefaults.global.responsive = true;\n\nfunction Doughnut() {\n  const [data, setData] = React.useState(getData());\n  const [intervalHandler, setIntervalHandler] = React.useState(0);\n\n  React.useEffect(() => {\n    setIntervalHandler(setInterval(() => updateState(), 3000));\n    return () => {\n      clearInterval(intervalHandler);\n    }\n  }, []);\n\n  function updateState() {\n    setData(getData());\n  }\n\n  return <DoughnutCharjs data={data} />\n}\n\nfunction getData() {\n  return {\n    labels: [\n      'Blue',\n      'Green',\n      'Yellow'\n    ],\n    datasets: [{\n      data: [getRandomInt(150, 280), getRandomInt(60, 150), getRandomInt(0, 60)],\n      backgroundColor: [\n        '#076E95',\n        '#4BB543',\n        '#FFCE56'\n      ],\n      hoverBackgroundColor: [\n        '#076E95',\n        '#4BB543',\n        '#FFCE56'\n      ]\n    }]\n  }\n}\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default React.memo(Doughnut);"]}
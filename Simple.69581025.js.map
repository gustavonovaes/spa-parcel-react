{"version":3,"sources":["../src/utils.js","../src/hooks/useTable.js","../src/actions.js","../src/plugin-hooks/useExpanded.js","../src/filterTypes.js","../src/plugin-hooks/useFilters.js","../src/aggregations.js","../src/plugin-hooks/useGroupBy.js","../src/sortTypes.js","../src/plugin-hooks/useSortBy.js","../src/plugin-hooks/usePagination.js","../src/plugin-hooks/useRowSelect.js","../src/plugin-hooks/useRowState.js","../src/plugin-hooks/useColumnOrder.js","../src/plugin-hooks/useResizeColumns.js","../src/plugin-hooks/useAbsoluteLayout.js","../src/plugin-hooks/useBlockLayout.js","../src/components/Tables/SortedTable.js","../src/components/Tables/Simple.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["defaultColumn","Cell","cell","value","String","show","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","safeUseLayoutEffect","window","process","React","useLayoutEffect","useEffect","findMaxDepth","columns","depth","reduce","prev","curr","Math","max","decorateColumn","column","userDefaultColumn","parent","index","id","accessor","Header","accessorPath","split","row","getBy","console","error","Error","decorateColumnTree","map","columnIndex","makeHeaderGroups","flatColumns","headerGroups","buildGroup","headerGroup","headers","parentColumns","hasParents","some","col","forEach","isFirst","length","latestParentColumn","reverse","similarParentColumns","filter","d","originalID","push","join","placeholderColumn","placeholderOf","includes","totalHeaderCount","sum","header","determineHeaderVisibility","instance","handleColumn","parentVisible","isVisible","totalVisibleHeaderCount","subColumn","subHeader","obj","path","def","pathObj","makePathArray","val","cursor","pathPart","e","defaultOrderByFn","arr","funcs","dirs","sort","rowA","rowB","i","sortFn","desc","sortInt","getFirstDefined","defaultGroupByFn","rows","columnID","resKey","values","Array","isArray","getElementDimensions","element","rect","getBoundingClientRect","style","getComputedStyle","margins","left","parseInt","marginLeft","right","marginRight","padding","paddingLeft","paddingRight","ceil","outerWidth","scrollWidth","flexRender","Comp","props","isReactComponent","isClassComponent","component","Object","getPrototypeOf","isFunctionComponent","mergeProps","groups","className","rest","Boolean","applyHooks","hooks","initial","args","next","nextValue","applyPropHooks","warnUnknownProps","keys","JSON","stringify","isFunction","a","flattenBy","childKey","recurse","ensurePluginOrder","plugins","befores","pluginName","afters","pluginIndex","findIndex","plugin","before","beforeIndex","after","afterIndex","expandRows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","key","isExpanded","original","canExpand","subRows","flattenDeep","replace","newArr","propTypes","data","PropTypes","array","isRequired","arrayOf","object","getSubRows","func","getRowID","debug","bool","renderErr","defaultState","defaultInitialState","defaultColumnInstance","defaultReducer","old","newState","defaultGetSubRows","defaultGetRowID","useTable","checkPropTypes","userColumns","initialState","userState","state","reducer","useState","originalState","originalSetState","useMemo","setState","useCallback","updater","type","instanceRef","useRef","assign","current","columnsBeforeHeaderGroups","columnsBeforeHeaderGroupsDeps","useBeforeDimensions","useMain","useRows","prepareRow","getTableProps","getTableBodyProps","getRowProps","getHeaderGroupProps","getHeaderProps","getCellProps","time","timeEnd","newColumns","flatRows","accessRow","originalRow","parentPath","rowID","cells","unpreparedAccessWarning","undefined","accessedData","flatHeaders","all","calculateDimensions","render","userProps","colSpan","columnPathStr","totalColumnsWidth","calculateHeaderWidths","sumTotalWidth","subHeaders","totalLeft","totalWidth","min","actions","addActions","acts","action","string","paginateExpandedRows","useExpanded","getExpandedToggleProps","toggleExpandedByPath","set","exists","shouldExist","newExpanded","Set","add","delete","toggleExpanded","onClick","persist","title","info","expandedDepth","findExpandedDepth","maxDepth","text","filterValue","rowValue","toLowerCase","autoRemove","exactText","exactTextCase","includesAll","every","exact","equals","between","Infinity","temp","filters","shape","disableFilters","Filter","any","manualFilters","useFilters","userFilterTypes","filterTypes","preFilteredRows","preFilteredFlatRows","setFilter","find","filterMethod","getFilterMethod","newFilter","shouldAutoRemove","remove","newFilters","setAllFilters","columnDisableFilters","canFilter","filteredRows","filteredFlatRows","filterRows","entries","filteredSoFar","warn","nonFilteredColumns","average","round","median","uniqueCount","size","count","groupBy","aggregate","oneOfType","disableGrouping","Aggregated","groupByFn","manualGrouping","aggregations","useGroupBy","deps","groupByColumns","g","nonGroupByColumns","groupByBoundaryColumnIndex","groupByBoundary","slice","manualGroupBy","userAggregations","columnDisableGrouping","isGrouped","groupedIndex","indexOf","canGroupBy","toggleGroupBy","toggle","resolvedToggle","getGroupByToggleProps","groupByID","isRepeatedValue","isAggregated","groupedRows","aggregateRowsToValues","isSourceRows","columnValues","aggregator","aggregateFn","groupRecursively","groupByVal","preGroupedRows","reSplitAlphaNumeric","alphanumeric","getRowValueByColumnID","b","toString","aa","shift","bb","an","bn","combo","isNaN","datetime","getTime","compareBasic","basic","sortBy","sortType","sortDescFirst","disableSorting","orderByFn","sortTypes","manualSorting","disableMultiSort","isMultiSortEvent","maxMultiSortColCount","number","disableSortRemove","disableMultiRemove","useSortBy","userSortTypes","shiftKey","getSortByToggleProps","toggleSortBy","multi","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","sortByChange","columnDisableSorting","canSort","clearSorting","columnSort","isSorted","sortedIndex","isSortedDesc","sortedRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","preSortedRows","pageSize","pageIndex","manualPagination","usePagination","disablePageResetOnDataChange","userPageCount","pageCount","rowDep","isPageIndexMountedRef","disablePageResetOnDataChangeRef","pageChange","pageOptions","page","pageStart","pageEnd","canPreviousPage","canNextPage","gotoPage","newPageIndex","previousPage","nextPage","setPageSize","topRowIndex","floor","pageSizeChange","selectedRowPaths","manualRowSelectedKey","useRowSelect","getToggleRowSelectedProps","getToggleAllRowsSelectedProps","selectedFlatRows","subRowPaths","isSelected","disableSelectedRowsResetOnDataChange","flatRowPaths","isAllRowsSelected","isRowSelectedMountedRef","disableSelectedRowsResetOnDataChangeRef","toggleRowSelectedAll","selectAll","updateParentRow","parentKey","selected","rowPath","startsWith","has","toggleRowSelected","childRowPrefixKey","newSelectedRows","onChange","target","checked","rowState","initialRowStateAccessor","useRowState","setRowState","pathKey","setCellState","cellState","rowsMountedRef","columnOrder","useColumnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnID","foundIndex","setColumnOrder","columnResizing","columnWidths","canResize","useResizeColumns","getResizerProps","disableResizing","position","onMouseDown","headersToResize","getLeafHeaders","startWidths","startX","clientX","onMouseMove","currentX","deltaX","percentageDeltaX","newColumnWidths","onMouseUp","document","removeEventListener","isResizingColumn","addEventListener","isResizing","draggable","leafHeaders","recurseHeader","useAbsoluteLayout","rowStyles","cellStyles","top","useBlockLayout","display","boxSizing","SortedTable","theadRows","tbodyRows","makeData","Simple","Style","styled","div","len","statusChance","random","firstName","lastName","age","visits","progress","status","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","message","stack","overlay","createErrorOverlay","body","appendChild","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","dep","concat","Function","cached","cache","cb"],"mappings":"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","file":"Simple.69581025.js","sourceRoot":"../public","sourcesContent":["import React from 'react'\n\nexport const defaultColumn = {\n  Cell: ({ cell: { value = '' } }) => String(value),\n  show: true,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof window !== 'undefined' && process.env.NODE_ENV === 'production'\n    ? React.useLayoutEffect\n    : React.useEffect\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\nexport function decorateColumn(\n  column,\n  userDefaultColumn,\n  parent,\n  depth,\n  index\n) {\n  // Apply the userDefaultColumn\n  column = { ...defaultColumn, ...userDefaultColumn, ...column }\n\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  column = {\n    // Make sure there is a fallback header, just in case\n    Header: () => <>&nbsp;</>,\n    ...column,\n    // Materialize and override this stuff\n    id,\n    accessor,\n    parent,\n    depth,\n    index,\n  }\n\n  return column\n}\n\n// Build the visible columns, headers and flat column list\nexport function decorateColumnTree(columns, defaultColumn, parent, depth = 0) {\n  return columns.map((column, columnIndex) => {\n    column = decorateColumn(column, defaultColumn, parent, depth, columnIndex)\n    if (column.columns) {\n      column.columns = decorateColumnTree(\n        column.columns,\n        defaultColumn,\n        column,\n        depth + 1\n      )\n    }\n    return column\n  })\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(flatColumns, defaultColumn) {\n  const headerGroups = []\n\n  // Build each header group from the bottom up\n  const buildGroup = (columns, depth) => {\n    const headerGroup = {\n      headers: [],\n    }\n\n    const parentColumns = []\n\n    // Do any of these columns have parents?\n    const hasParents = columns.some(col => col.parent)\n\n    columns.forEach(column => {\n      // Are we the first column in this group?\n      const isFirst = !parentColumns.length\n\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      // If the column has a parent, add it if necessary\n      if (column.parent) {\n        const similarParentColumns = parentColumns.filter(\n          d => d.originalID === column.parent.id\n        )\n        if (isFirst || latestParentColumn.originalID !== column.parent.id) {\n          parentColumns.push({\n            ...column.parent,\n            originalID: column.parent.id,\n            id: [column.parent.id, similarParentColumns.length].join('_'),\n          })\n        }\n      } else if (hasParents) {\n        // If other columns have parents, we'll need to add a place holder if necessary\n        const originalID = [column.id, 'placeholder'].join('_')\n        const similarParentColumns = parentColumns.filter(\n          d => d.originalID === originalID\n        )\n        const placeholderColumn = decorateColumn(\n          {\n            originalID,\n            id: [column.id, 'placeholder', similarParentColumns.length].join(\n              '_'\n            ),\n            placeholderOf: column,\n          },\n          defaultColumn\n        )\n        if (\n          isFirst ||\n          latestParentColumn.originalID !== placeholderColumn.originalID\n        ) {\n          parentColumns.push(placeholderColumn)\n        }\n      }\n\n      // Establish the new headers[] relationship on the parent\n      if (column.parent || hasParents) {\n        latestParentColumn = [...parentColumns].reverse()[0]\n        latestParentColumn.headers = latestParentColumn.headers || []\n        if (!latestParentColumn.headers.includes(column)) {\n          latestParentColumn.headers.push(column)\n        }\n      }\n\n      column.totalHeaderCount = column.headers\n        ? column.headers.reduce(\n            (sum, header) => sum + header.totalHeaderCount,\n            0\n          )\n        : 1 // Leaf node columns take up at least one count\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    if (parentColumns.length) {\n      buildGroup(parentColumns, depth + 1)\n    }\n  }\n\n  buildGroup(flatColumns, 0)\n\n  return headerGroups.reverse()\n}\n\nexport function determineHeaderVisibility(instance) {\n  const { headers } = instance\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible\n      ? typeof column.show === 'function'\n        ? column.show(instance)\n        : !!column.show\n      : false\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const pathObj = makePathArray(path)\n  let val\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function defaultGroupByFn(rows, columnID) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnID]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    !!Object.getPrototypeOf(component).isReactComponent\n  )\n}\n\nfunction isFunctionComponent(component) {\n  return typeof component === 'function'\n}\n\nfunction isReactComponent(component) {\n  return isClassComponent(component) || isFunctionComponent(component)\n}\n\nexport const mergeProps = (...groups) => {\n  let props = {}\n  groups.forEach(({ style = {}, className, ...rest } = {}) => {\n    props = {\n      ...props,\n      ...rest,\n      style: {\n        ...(props.style || {}),\n        ...style,\n      },\n      className: [props.className, className].filter(Boolean).join(' '),\n    }\n  })\n  return props\n}\n\nexport const applyHooks = (hooks, initial, ...args) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, ...args)\n    if (typeof nextValue === 'undefined') {\n      throw new Error(\n        'React Table: A hook just returned undefined! This is not allowed.'\n      )\n    }\n    return nextValue\n  }, initial)\n\nexport const applyPropHooks = (hooks, ...args) =>\n  hooks.reduce((prev, next) => mergeProps(prev, next(...args)), {})\n\nexport const warnUnknownProps = props => {\n  if (Object.keys(props).length) {\n    throw new Error(\n      `Unknown options passed to useReactTable:\n\n${JSON.stringify(props, null, 2)}`\n    )\n  }\n}\n\nexport function sum(arr) {\n  return arr.reduce((prev, curr) => prev + curr, 0)\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(columns, childKey) {\n  const flatColumns = []\n\n  const recurse = columns => {\n    columns.forEach(d => {\n      if (!d[childKey]) {\n        flatColumns.push(d)\n      } else {\n        recurse(d[childKey])\n      }\n    })\n  }\n\n  recurse(columns)\n\n  return flatColumns\n}\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    throw new Error(`The plugin ${pluginName} was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      throw new Error(\n        `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n      )\n    }\n  })\n\n  afters.forEach(after => {\n    const afterIndex = plugins.findIndex(plugin => plugin.pluginName === after)\n    if (afterIndex > -1 && afterIndex < pluginIndex) {\n      throw new Error(\n        `React Table: The ${pluginName} plugin hook must be placed before the ${after} plugin hook!`\n      )\n    }\n  })\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = row => {\n    const key = row.path.join('.')\n\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) ||\n      expanded.includes(key)\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    expandedRows.push(row)\n\n    if (expandSubRows && row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(handleRow)\n    }\n  }\n\n  rows.forEach(handleRow)\n\n  return expandedRows\n}\n\n//\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(/\\[/g, '.')\n      .replace(/\\]/g, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n//\nimport {\n  applyHooks,\n  applyPropHooks,\n  mergeProps,\n  flexRender,\n  decorateColumnTree,\n  makeHeaderGroups,\n  flattenBy,\n  determineHeaderVisibility,\n} from '../utils'\n\nconst propTypes = {\n  // General\n  data: PropTypes.array.isRequired,\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  defaultColumn: PropTypes.object,\n  getSubRows: PropTypes.func,\n  getRowID: PropTypes.func,\n  debug: PropTypes.bool,\n}\n\nconst renderErr =\n  'You must specify a valid render component. This could be \"column.Cell\", \"column.Header\", \"column.Filter\", \"column.Aggregated\" or any other custom renderer component.'\n\nexport const defaultState = {}\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (old, newState) => newState\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowID = (row, index) => index\n\nexport const useTable = (props, ...plugins) => {\n  // Validate props\n  PropTypes.checkPropTypes(propTypes, props, 'property', 'useTable')\n\n  // Destructure props\n  let {\n    data,\n    columns: userColumns,\n    initialState = defaultInitialState,\n    state: userState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowID = defaultGetRowID,\n    reducer = defaultReducer,\n    debug,\n  } = props\n\n  debug = process.env.NODE_ENV === 'production' ? false : debug\n\n  // But use the users table state if provided\n  let [originalState, originalSetState] = React.useState({\n    ...defaultState,\n    ...initialState,\n  })\n\n  const state = React.useMemo(() => {\n    if (userState) {\n      const newState = {\n        ...originalState,\n      }\n      Object.keys(userState).forEach(key => {\n        newState[key] = userState[key]\n      })\n      return newState\n    }\n    return originalState\n  }, [originalState, userState])\n\n  const setState = React.useCallback(\n    (updater, type) => {\n      return originalSetState(old => {\n        const newState = typeof updater === 'function' ? updater(old) : updater\n        return reducer(old, newState, type)\n      })\n    },\n    [reducer]\n  )\n\n  // The table instance ref\n  let instanceRef = React.useRef({})\n\n  Object.assign(instanceRef.current, {\n    ...props,\n    data, // The raw data\n    state,\n    setState, // The resolved table state\n    plugins, // All resolved plugins\n    hooks: {\n      columnsBeforeHeaderGroups: [],\n      columnsBeforeHeaderGroupsDeps: [],\n      useBeforeDimensions: [],\n      useMain: [],\n      useRows: [],\n      prepareRow: [],\n      getTableProps: [],\n      getTableBodyProps: [],\n      getRowProps: [],\n      getHeaderGroupProps: [],\n      getHeaderProps: [],\n      getCellProps: [],\n    },\n  })\n\n  // Allow plugins to register hooks\n  if (process.env.NODE_ENV === 'development' && debug) console.time('plugins')\n\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(instanceRef.current.hooks)\n  })\n\n  if (process.env.NODE_ENV === 'development' && debug)\n    console.timeEnd('plugins')\n\n  // Decorate All the columns\n  let columns = React.useMemo(\n    () => decorateColumnTree(userColumns, defaultColumn),\n    [defaultColumn, userColumns]\n  )\n\n  // Get the flat list of all columns andllow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let flatColumns = React.useMemo(() => {\n    if (process.env.NODE_ENV === 'development' && debug)\n      console.time('hooks.columnsBeforeHeaderGroups')\n\n    let newColumns = applyHooks(\n      instanceRef.current.hooks.columnsBeforeHeaderGroups,\n      flattenBy(columns, 'columns'),\n      instanceRef.current\n    )\n\n    if (process.env.NODE_ENV === 'development' && debug)\n      console.timeEnd('hooks.columnsBeforeHeaderGroups')\n    return newColumns\n  }, [\n    columns,\n    debug,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    ...applyHooks(\n      instanceRef.current.hooks.columnsBeforeHeaderGroupsDeps,\n      [],\n      instanceRef.current\n    ),\n  ])\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () => makeHeaderGroups(flatColumns, defaultColumn),\n    [defaultColumn, flatColumns]\n  )\n\n  const headers = React.useMemo(() => headerGroups[0].headers, [headerGroups])\n\n  Object.assign(instanceRef.current, {\n    columns,\n    flatColumns,\n    headerGroups,\n    headers,\n  })\n\n  // Access the row model\n  const [rows, flatRows] = React.useMemo(() => {\n    if (process.env.NODE_ENV === 'development' && debug)\n      console.time('getAccessedRows')\n\n    let flatRows = []\n\n    // Access the row's data\n    const accessRow = (originalRow, i, depth = 0, parentPath = []) => {\n      // Keep the original reference around\n      const original = originalRow\n\n      const rowID = getRowID(originalRow, i)\n\n      // Make the new path for the row\n      const path = [...parentPath, rowID]\n\n      const row = {\n        original,\n        index: i,\n        path, // used to create a key for each row even if not nested\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      flatRows.push(row)\n\n      // Process any subRows\n      let subRows = getSubRows(originalRow, i)\n\n      if (subRows) {\n        row.subRows = subRows.map((d, i) => accessRow(d, i, depth + 1, path))\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      const unpreparedAccessWarning = () => {\n        throw new Error(\n          'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n        )\n      }\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n      flatColumns.forEach(column => {\n        row.values[column.id] = column.accessor\n          ? column.accessor(originalRow, i, { subRows, depth, data })\n          : undefined\n      })\n\n      return row\n    }\n\n    // Use the resolved data\n    const accessedData = data.map((d, i) => accessRow(d, i))\n    if (process.env.NODE_ENV === 'development' && debug)\n      console.timeEnd('getAccessedRows')\n    return [accessedData, flatRows]\n  }, [debug, data, getRowID, getSubRows, flatColumns])\n\n  instanceRef.current.rows = rows\n  instanceRef.current.flatRows = flatRows\n\n  // Determine column visibility\n  determineHeaderVisibility(instanceRef.current)\n\n  // Provide a flat header list for utilities\n  instanceRef.current.flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  if (process.env.NODE_ENV === 'development' && debug)\n    console.time('hooks.useBeforeDimensions')\n  instanceRef.current = applyHooks(\n    instanceRef.current.hooks.useBeforeDimensions,\n    instanceRef.current\n  )\n  if (process.env.NODE_ENV === 'development' && debug)\n    console.timeEnd('hooks.useBeforeDimensions')\n\n  calculateDimensions(instanceRef.current)\n\n  if (process.env.NODE_ENV === 'development' && debug)\n    console.time('hooks.useMain')\n  instanceRef.current = applyHooks(\n    instanceRef.current.hooks.useMain,\n    instanceRef.current\n  )\n  if (process.env.NODE_ENV === 'development' && debug)\n    console.timeEnd('hooks.useMain')\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  instanceRef.current.flatHeaders.forEach(column => {\n    // Give columns/headers rendering power\n    column.render = (type, userProps = {}) => {\n      const Comp = typeof type === 'string' ? column[type] : type\n\n      if (typeof Comp === 'undefined') {\n        throw new Error(renderErr)\n      }\n\n      return flexRender(Comp, {\n        ...instanceRef.current,\n        column,\n        ...userProps,\n      })\n    }\n\n    // Give columns/headers a default getHeaderProps\n    column.getHeaderProps = props =>\n      mergeProps(\n        {\n          key: ['header', column.id].join('_'),\n          colSpan: column.totalVisibleHeaderCount,\n        },\n        applyPropHooks(\n          instanceRef.current.hooks.getHeaderProps,\n          column,\n          instanceRef.current\n        ),\n        props\n      )\n  })\n\n  instanceRef.current.headerGroups.forEach((headerGroup, i) => {\n    // Filter out any headers and headerGroups that don't have visible columns\n    headerGroup.headers = headerGroup.headers.filter(header => {\n      const recurse = headers =>\n        headers.filter(header => {\n          if (header.headers) {\n            return recurse(header.headers)\n          }\n          return header.isVisible\n        }).length\n      if (header.headers) {\n        return recurse(header.headers)\n      }\n      return header.isVisible\n    })\n\n    // Give headerGroups getRowProps\n    if (headerGroup.headers.length) {\n      headerGroup.getHeaderGroupProps = (props = {}) =>\n        mergeProps(\n          {\n            key: [`header${i}`].join('_'),\n          },\n          applyPropHooks(\n            instanceRef.current.hooks.getHeaderGroupProps,\n            headerGroup,\n            instanceRef.current\n          ),\n          props\n        )\n\n      return true\n    }\n  })\n\n  // Run the rows (this could be a dangerous hook with a ton of data)\n  if (process.env.NODE_ENV === 'development' && debug)\n    console.time('hooks.useRows')\n  instanceRef.current.rows = applyHooks(\n    instanceRef.current.hooks.useRows,\n    instanceRef.current.rows,\n    instanceRef.current\n  )\n  if (process.env.NODE_ENV === 'development' && debug)\n    console.timeEnd('hooks.useRows')\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  instanceRef.current.prepareRow = React.useCallback(row => {\n    row.getRowProps = props =>\n      mergeProps(\n        { key: ['row', ...row.path].join('_') },\n        applyPropHooks(\n          instanceRef.current.hooks.getRowProps,\n          row,\n          instanceRef.current\n        ),\n        props\n      )\n\n    // Build the visible cells for each row\n    row.cells = instanceRef.current.flatColumns\n      .filter(d => d.isVisible)\n      .map(column => {\n        const cell = {\n          column,\n          row,\n          value: row.values[column.id],\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = props => {\n          const columnPathStr = [...row.path, column.id].join('_')\n          return mergeProps(\n            {\n              key: ['cell', columnPathStr].join('_'),\n            },\n            applyPropHooks(\n              instanceRef.current.hooks.getCellProps,\n              cell,\n              instanceRef.current\n            ),\n            props\n          )\n        }\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = (type, userProps = {}) => {\n          const Comp = typeof type === 'string' ? column[type] : type\n\n          if (typeof Comp === 'undefined') {\n            throw new Error(renderErr)\n          }\n\n          return flexRender(Comp, {\n            ...instanceRef.current,\n            column,\n            row,\n            cell,\n            ...userProps,\n          })\n        }\n\n        return cell\n      })\n\n    // need to apply any row specific hooks (useExpanded requires this)\n    applyHooks(instanceRef.current.hooks.prepareRow, row, instanceRef.current)\n  }, [])\n\n  instanceRef.current.getTableProps = userProps =>\n    mergeProps(\n      applyPropHooks(\n        instanceRef.current.hooks.getTableProps,\n        instanceRef.current\n      ),\n      userProps\n    )\n\n  instanceRef.current.getTableBodyProps = userProps =>\n    mergeProps(\n      applyPropHooks(\n        instanceRef.current.hooks.getTableBodyProps,\n        instanceRef.current\n      ),\n      userProps\n    )\n\n  return instanceRef.current\n}\n\nfunction calculateDimensions(instance) {\n  const { headers } = instance\n\n  instance.totalColumnsWidth = calculateHeaderWidths(headers)\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      header.totalWidth = calculateHeaderWidths(subHeaders, left)\n    } else {\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n    }\n\n    left += header.totalWidth\n    sumTotalWidth += header.totalWidth\n  })\n\n  return sumTotalWidth\n}\n","const actions = {}\nconst types = {}\n\nexport { actions, types }\n\nexport const addActions = (...acts) => {\n  acts.forEach(action => {\n    // Action values are formatted this way to discourage\n    // you (the dev) from interacting with them in any way\n    // other than importing `{ actions } from 'react-table'`\n    // and referencing an action via `actions[actionName]`\n    actions[action] = `React Table Action: ${action}`\n    types[actions[action]] = true\n  })\n}\n","import { useMemo } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { mergeProps, applyPropHooks, expandRows } from '../utils'\nimport { addActions, actions } from '../actions'\nimport { defaultState } from '../hooks/useTable'\n\ndefaultState.expanded = []\n\naddActions('toggleExpanded', 'useExpanded')\n\nconst propTypes = {\n  manualExpandedKey: PropTypes.string,\n  paginateExpandedRows: PropTypes.bool,\n}\n\nexport const useExpanded = hooks => {\n  hooks.getExpandedToggleProps = []\n  hooks.useMain.push(useMain)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nfunction useMain(instance) {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'useExpanded')\n\n  const {\n    debug,\n    rows,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    hooks,\n    state: { expanded },\n    setState,\n  } = instance\n\n  const toggleExpandedByPath = (path, set) => {\n    const key = path.join('.')\n\n    return setState(old => {\n      const exists = old.expanded.includes(key)\n      const shouldExist = typeof set !== 'undefined' ? set : !exists\n      let newExpanded = new Set(old.expanded)\n\n      if (!exists && shouldExist) {\n        newExpanded.add(key)\n      } else if (exists && !shouldExist) {\n        newExpanded.delete(key)\n      } else {\n        return old\n      }\n\n      return {\n        ...old,\n        expanded: [...newExpanded.values()],\n      }\n    }, actions.toggleExpanded)\n  }\n\n  hooks.prepareRow.push(row => {\n    row.toggleExpanded = set => toggleExpandedByPath(row.path, set)\n    row.getExpandedToggleProps = props => {\n      return mergeProps(\n        {\n          onClick: e => {\n            e.persist()\n            row.toggleExpanded()\n          },\n          style: {\n            cursor: 'pointer',\n          },\n          title: 'Toggle Expanded',\n        },\n        applyPropHooks(instance.hooks.getExpandedToggleProps, row, instance),\n        props\n      )\n    }\n    return row\n  })\n\n  const expandedRows = useMemo(() => {\n    if (process.env.NODE_ENV === 'development' && debug)\n      console.info('getExpandedRows')\n\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [\n    debug,\n    paginateExpandedRows,\n    rows,\n    manualExpandedKey,\n    expanded,\n    expandSubRows,\n  ])\n\n  const expandedDepth = findExpandedDepth(expanded)\n\n  return {\n    ...instance,\n    toggleExpandedByPath,\n    expandedDepth,\n    rows: expandedRows,\n  }\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  expanded.forEach(key => {\n    const path = key.split('.')\n    maxDepth = Math.max(maxDepth, path.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, id, filterValue) => {\n  rows = rows.filter(row => {\n    const rowValue = row.values[id]\n    return String(rowValue)\n      .toLowerCase()\n      .includes(String(filterValue).toLowerCase())\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, id, filterValue) => {\n  return rows.filter(row => {\n    const rowValue = row.values[id]\n    return rowValue !== undefined\n      ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n      : true\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, id, filterValue) => {\n  return rows.filter(row => {\n    const rowValue = row.values[id]\n    return rowValue !== undefined\n      ? String(rowValue) === String(filterValue)\n      : true\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, id, filterValue) => {\n  return rows.filter(row => {\n    const rowValue = row.values[id]\n    return filterValue.includes(rowValue)\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, id, filterValue) => {\n  return rows.filter(row => {\n    const rowValue = row.values[id]\n    return (\n      rowValue &&\n      rowValue.length &&\n      filterValue.every(val => rowValue.includes(val))\n    )\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, id, filterValue) => {\n  return rows.filter(row => {\n    const rowValue = row.values[id]\n    return rowValue === filterValue\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, id, filterValue) => {\n  return rows.filter(row => {\n    const rowValue = row.values[id]\n    // eslint-disable-next-line eqeqeq\n    return rowValue == filterValue\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, id, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    const rowValue = row.values[id]\n    return rowValue >= min && rowValue <= max\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { getFirstDefined, isFunction } from '../utils'\nimport * as filterTypes from '../filterTypes'\nimport { addActions, actions } from '../actions'\nimport { defaultState } from '../hooks/useTable'\n\ndefaultState.filters = {}\n\naddActions('setFilter', 'setAllFilters')\n\nconst propTypes = {\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      disableFilters: PropTypes.bool,\n      Filter: PropTypes.any,\n    })\n  ),\n\n  manualFilters: PropTypes.bool,\n}\n\nexport const useFilters = hooks => {\n  hooks.useMain.push(useMain)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction useMain(instance) {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'useFilters')\n\n  const {\n    debug,\n    rows,\n    flatRows,\n    flatColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    disableFilters,\n    state: { filters },\n    setState,\n  } = instance\n\n  const preFilteredRows = rows\n  const preFilteredFlatRows = flatRows\n\n  const setFilter = (id, updater) => {\n    const column = flatColumns.find(d => d.id === id)\n\n    if (!column) {\n      throw new Error(`React-Table: Could not find a column with id: ${id}`)\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    return setState(old => {\n      const newFilter =\n        typeof updater === 'function' ? updater(old.filters[id]) : updater\n\n      //\n      if (shouldAutoRemove(filterMethod.autoRemove, newFilter)) {\n        const { [id]: remove, ...newFilters } = old.filters\n        return {\n          ...old,\n          filters: newFilters,\n        }\n      }\n\n      return {\n        ...old,\n        filters: {\n          ...old.filters,\n          [id]: newFilter,\n        },\n      }\n    }, actions.setFilter)\n  }\n\n  const setAllFilters = updater => {\n    return setState(old => {\n      const newFilters = typeof updater === 'function' ? updater(old) : updater\n\n      // Filter out undefined values\n      Object.keys(newFilters).forEach(id => {\n        const newFilter = newFilters[id]\n        const column = flatColumns.find(d => d.id === id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (shouldAutoRemove(filterMethod.autoRemove, newFilter)) {\n          delete newFilters[id]\n        }\n      })\n\n      return {\n        ...old,\n        filters: newFilters,\n      }\n    }, actions.setAllFilters)\n  }\n\n  flatColumns.forEach(column => {\n    const { id, accessor, disableFilters: columnDisableFilters } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : false\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    column.filterValue = filters[id]\n  })\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const { filteredRows, filteredFlatRows } = React.useMemo(() => {\n    if (manualFilters || !Object.keys(filters).length) {\n      return {\n        filteredRows: rows,\n        filteredFlatRows: flatRows,\n      }\n    }\n\n    const filteredFlatRows = []\n\n    if (process.env.NODE_ENV === 'development' && debug)\n      console.info('getFilteredRows')\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = Object.entries(filters).reduce(\n        (filteredSoFar, [columnID, filterValue]) => {\n          // Find the filters column\n          const column = flatColumns.find(d => d.id === columnID)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            columnID,\n            filterValue,\n            column\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows = filteredRows.map(row => {\n        filteredFlatRows.push(row)\n        if (!row.subRows) {\n          return row\n        }\n        return {\n          ...row,\n          subRows:\n            row.subRows && row.subRows.length > 0\n              ? filterRows(row.subRows, depth + 1)\n              : row.subRows,\n        }\n      })\n\n      return filteredRows\n    }\n\n    return {\n      filteredRows: filterRows(rows),\n      filteredFlatRows,\n    }\n  }, [\n    manualFilters,\n    filters,\n    debug,\n    rows,\n    flatRows,\n    flatColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = flatColumns.filter(\n      column => !Object.keys(filters).includes(column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, flatColumns])\n\n  return {\n    ...instance,\n    setFilter,\n    setAllFilters,\n    preFilteredRows,\n    preFilteredFlatRows,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n  }\n}\n\nfunction shouldAutoRemove(autoRemove, value) {\n  return autoRemove ? autoRemove(value) : typeof value === 'undefined'\n}\n\nfunction getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n","export function sum(values, rows) {\n  return values.reduce((sum, next) => sum + next, 0)\n}\n\nexport function average(values, rows) {\n  return Math.round((sum(values, rows) / values.length) * 100) / 100\n}\n\nexport function median(values) {\n  let min = values[0] || ''\n  let max = values[0] || ''\n\n  values.forEach(value => {\n    min = Math.min(min, value)\n    max = Math.max(max, value)\n  })\n\n  return (min + max) / 2\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import { useMemo } from 'react'\nimport PropTypes from 'prop-types'\n\nimport * as aggregations from '../aggregations'\nimport { addActions, actions } from '../actions'\nimport { defaultState } from '../hooks/useTable'\nimport {\n  mergeProps,\n  applyPropHooks,\n  defaultGroupByFn,\n  getFirstDefined,\n  ensurePluginOrder,\n} from '../utils'\n\ndefaultState.groupBy = []\n\naddActions('toggleGroupBy')\n\nconst propTypes = {\n  // General\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      aggregate: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.string,\n        PropTypes.arrayOf(\n          PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n        ),\n      ]),\n      disableGrouping: PropTypes.bool,\n      Aggregated: PropTypes.any,\n    })\n  ),\n  groupByFn: PropTypes.func,\n  manualGrouping: PropTypes.bool,\n  disableGrouping: PropTypes.bool,\n  aggregations: PropTypes.object,\n}\n\nexport const useGroupBy = hooks => {\n  hooks.columnsBeforeHeaderGroups.push(columnsBeforeHeaderGroups)\n  hooks.columnsBeforeHeaderGroupsDeps.push((deps, instance) => {\n    deps.push(instance.state.groupBy)\n    return deps\n  })\n  hooks.useMain.push(useMain)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nfunction columnsBeforeHeaderGroups(flatColumns, { state: { groupBy } }) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy.map(g => flatColumns.find(col => col.id === g))\n  const nonGroupByColumns = flatColumns.filter(col => !groupBy.includes(col.id))\n\n  // If a groupByBoundary column is found, place the groupBy's after it\n  const groupByBoundaryColumnIndex =\n    flatColumns.findIndex(column => column.groupByBoundary) + 1\n\n  return [\n    ...nonGroupByColumns.slice(0, groupByBoundaryColumnIndex),\n    ...groupByColumns,\n    ...nonGroupByColumns.slice(groupByBoundaryColumnIndex),\n  ]\n}\n\nfunction useMain(instance) {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'useGroupBy')\n\n  const {\n    debug,\n    rows,\n    flatColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    disableGrouping,\n    aggregations: userAggregations = {},\n    hooks,\n    plugins,\n    state: { groupBy },\n    setState,\n  } = instance\n\n  ensurePluginOrder(plugins, [], 'useGroupBy', ['useSortBy', 'useExpanded'])\n\n  flatColumns.forEach(column => {\n    const { id, accessor, disableGrouping: columnDisableGrouping } = column\n    column.isGrouped = groupBy.includes(id)\n    column.groupedIndex = groupBy.indexOf(id)\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          columnDisableGrouping,\n          disableGrouping === true ? false : undefined,\n          true\n        )\n      : false\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = (id, toggle) => {\n    return setState(old => {\n      const resolvedToggle =\n        typeof toggle !== 'undefined' ? toggle : !groupBy.includes(id)\n      if (resolvedToggle) {\n        return {\n          ...old,\n          groupBy: [...groupBy, id],\n        }\n      }\n      return {\n        ...old,\n        groupBy: groupBy.filter(d => d !== id),\n      }\n    }, actions.toggleGroupBy)\n  }\n\n  hooks.getGroupByToggleProps = []\n\n  flatHeaders.forEach(header => {\n    const { canGroupBy } = header\n    header.getGroupByToggleProps = props => {\n      return mergeProps(\n        {\n          onClick: canGroupBy\n            ? e => {\n                e.persist()\n                header.toggleGroupBy()\n              }\n            : undefined,\n          style: {\n            cursor: canGroupBy ? 'pointer' : undefined,\n          },\n          title: 'Toggle GroupBy',\n        },\n        applyPropHooks(instance.hooks.getGroupByToggleProps, header, instance),\n        props\n      )\n    }\n  })\n\n  hooks.prepareRow.push(row => {\n    row.cells.forEach(cell => {\n      // Grouped cells are in the groupBy and the pivot cell for the row\n      cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n      // Repeated cells are any columns in the groupBy that are not grouped\n      cell.isRepeatedValue = !cell.isGrouped && cell.column.isGrouped\n      // Aggregated cells are not grouped, not repeated, but still have subRows\n      cell.isAggregated =\n        !cell.isGrouped && !cell.isRepeatedValue && row.canExpand\n    })\n    return row\n  })\n\n  const groupedRows = useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return rows\n    }\n\n    if (process.env.NODE_ENV === 'development' && debug)\n      console.info('getGroupedRows')\n    // Find the columns that can or are aggregating\n\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (rows, isSourceRows) => {\n      const values = {}\n\n      flatColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (groupBy.includes(column.id)) {\n          values[column.id] = rows[0] ? rows[0].values[column.id] : null\n          return\n        }\n\n        const columnValues = rows.map(d => d.values[column.id])\n\n        let aggregator = column.aggregate\n\n        if (Array.isArray(aggregator)) {\n          if (aggregator.length !== 2) {\n            console.info({ column })\n            throw new Error(\n              `React Table: Complex aggregators must have 2 values, eg. aggregate: ['sum', 'count']. More info above...`\n            )\n          }\n          if (isSourceRows) {\n            aggregator = aggregator[1]\n          } else {\n            aggregator = aggregator[0]\n          }\n        }\n\n        let aggregateFn =\n          typeof aggregator === 'function'\n            ? aggregator\n            : userAggregations[aggregator] || aggregations[aggregator]\n\n        if (aggregateFn) {\n          values[column.id] = aggregateFn(columnValues, rows)\n        } else if (aggregator) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n      return values\n    }\n\n    // Recursively group the data\n    const groupRecursively = (rows, depth = 0, parentPath = []) => {\n      // This is the last level, just return the rows\n      if (depth >= groupBy.length) {\n        return rows\n      }\n\n      const columnID = groupBy[depth]\n\n      // Group the rows together for this level\n      let groupedRows = groupByFn(rows, columnID)\n\n      // Recurse to sub rows before aggregation\n      groupedRows = Object.entries(groupedRows).map(\n        ([groupByVal, subRows], index) => {\n          const path = [...parentPath, `${columnID}:${groupByVal}`]\n\n          subRows = groupRecursively(subRows, depth + 1, path)\n\n          const values = aggregateRowsToValues(\n            subRows,\n            depth + 1 >= groupBy.length\n          )\n\n          const row = {\n            isAggregated: true,\n            groupByID: columnID,\n            groupByVal,\n            values,\n            subRows,\n            depth,\n            index,\n            path,\n          }\n\n          return row\n        }\n      )\n\n      return groupedRows\n    }\n\n    // Assign the new data\n    return groupRecursively(rows)\n  }, [\n    manualGroupBy,\n    groupBy,\n    debug,\n    rows,\n    flatColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  return {\n    ...instance,\n    toggleGroupBy,\n    rows: groupedRows,\n    preGroupedRows: rows,\n  }\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnID) => {\n  let a = getRowValueByColumnID(rowA, columnID)\n  let b = getRowValueByColumnID(rowB, columnID)\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\n\nexport function datetime(rowA, rowB, columnID) {\n  let a = getRowValueByColumnID(rowA, columnID)\n  let b = getRowValueByColumnID(rowB, columnID)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnID) {\n  let a = getRowValueByColumnID(rowA, columnID)\n  let b = getRowValueByColumnID(rowB, columnID)\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValueByColumnID(row, columnID) {\n  return row.values[columnID]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { ensurePluginOrder, defaultColumn } from '../utils'\nimport { addActions, actions } from '../actions'\nimport { defaultState } from '../hooks/useTable'\nimport * as sortTypes from '../sortTypes'\nimport {\n  mergeProps,\n  applyPropHooks,\n  getFirstDefined,\n  defaultOrderByFn,\n  isFunction,\n} from '../utils'\n\ndefaultState.sortBy = []\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\naddActions('sortByChange')\n\nconst propTypes = {\n  // General\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      sortType: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n      sortDescFirst: PropTypes.bool,\n      disableSorting: PropTypes.bool,\n    })\n  ),\n  orderByFn: PropTypes.func,\n  sortTypes: PropTypes.object,\n  manualSorting: PropTypes.bool,\n  disableSorting: PropTypes.bool,\n  disableMultiSort: PropTypes.bool,\n  isMultiSortEvent: PropTypes.func,\n  maxMultiSortColCount: PropTypes.number,\n  disableSortRemove: PropTypes.bool,\n  disableMultiRemove: PropTypes.bool,\n}\n\nexport const useSortBy = hooks => {\n  hooks.useMain.push(useMain)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nfunction useMain(instance) {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'useSortBy')\n\n  const {\n    debug,\n    rows,\n    flatColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSorting,\n    disableSorting,\n    disableSortRemove,\n    disableMultiRemove,\n    disableMultiSort,\n    isMultiSortEvent = e => e.shiftKey,\n    maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    flatHeaders,\n    hooks,\n    state: { sortBy },\n    setState,\n    plugins,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useFilters'], 'useSortBy', [])\n  // Add custom hooks\n  hooks.getSortByToggleProps = []\n\n  // Updates sorting based on a columnID, desc flag and multi flag\n  const toggleSortBy = (columnID, desc, multi) => {\n    return setState(old => {\n      const { sortBy } = old\n\n      // Find the column for this columnID\n      const column = flatColumns.find(d => d.id === columnID)\n      const { sortDescFirst } = column\n\n      // Find any existing sortBy for this column\n      const existingSortBy = sortBy.find(d => d.id === columnID)\n      const existingIndex = sortBy.findIndex(d => d.id === columnID)\n      const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n      let newSortBy = []\n\n      // What should we do with this sort action?\n      let action\n\n      if (!disableMultiSort && multi) {\n        if (existingSortBy) {\n          action = 'toggle'\n        } else {\n          action = 'add'\n        }\n      } else {\n        // Normal mode\n        if (existingIndex !== sortBy.length - 1) {\n          action = 'replace'\n        } else if (existingSortBy) {\n          action = 'toggle'\n        } else {\n          action = 'replace'\n        }\n      }\n\n      // Handle toggle states that will remove the sortBy\n      if (\n        action === 'toggle' && // Must be toggling\n        !disableSortRemove && // If disableSortRemove, disable in general\n        !hasDescDefined && // Must not be setting desc\n        (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n        ((existingSortBy && // Finally, detect if it should indeed be removed\n          (existingSortBy.desc && !sortDescFirst)) ||\n          (!existingSortBy.desc && sortDescFirst))\n      ) {\n        action = 'remove'\n      }\n\n      if (action === 'replace') {\n        newSortBy = [\n          {\n            id: columnID,\n            desc: hasDescDefined ? desc : sortDescFirst,\n          },\n        ]\n      } else if (action === 'add') {\n        newSortBy = [\n          ...sortBy,\n          {\n            id: columnID,\n            desc: hasDescDefined ? desc : sortDescFirst,\n          },\n        ]\n        // Take latest n columns\n        newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n      } else if (action === 'toggle') {\n        // This flips (or sets) the\n        newSortBy = sortBy.map(d => {\n          if (d.id === columnID) {\n            return {\n              ...d,\n              desc: hasDescDefined ? desc : !existingSortBy.desc,\n            }\n          }\n          return d\n        })\n      } else if (action === 'remove') {\n        newSortBy = sortBy.filter(d => d.id !== columnID)\n      }\n\n      return {\n        ...old,\n        sortBy: newSortBy,\n      }\n    }, actions.sortByChange)\n  }\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const { accessor, disableSorting: columnDisableSorting, id } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSorting === true ? false : undefined,\n          disableSorting === true ? false : undefined,\n          true\n        )\n      : false\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSorting = () => {\n        return setState(old => {\n          const { sortBy } = old\n          const newSortBy = sortBy.filter(d => d.id !== column.id)\n          return {\n            ...old,\n            sortBy: newSortBy,\n          }\n        }, actions.sortByChange)\n      }\n    }\n\n    column.getSortByToggleProps = props => {\n      return mergeProps(\n        {\n          onClick: canSort\n            ? e => {\n                e.persist()\n                column.toggleSortBy(\n                  undefined,\n                  !instance.disableMultiSort && isMultiSortEvent(e)\n                )\n              }\n            : undefined,\n          style: {\n            cursor: canSort ? 'pointer' : undefined,\n          },\n          title: 'Toggle SortBy',\n        },\n        applyPropHooks(instance.hooks.getSortByToggleProps, column, instance),\n        props\n      )\n    }\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const sortedRows = React.useMemo(() => {\n    if (manualSorting || !sortBy.length) {\n      return rows\n    }\n    if (process.env.NODE_ENV === 'development' && debug)\n      console.time('getSortedRows')\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      flatColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = flatColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = flatColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        if (!row.subRows || row.subRows.length <= 1) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    if (process.env.NODE_ENV === 'development' && debug)\n      console.timeEnd('getSortedRows')\n\n    return sortData(rows)\n  }, [\n    manualSorting,\n    sortBy,\n    debug,\n    rows,\n    flatColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  return {\n    ...instance,\n    toggleSortBy,\n    rows: sortedRows,\n    preSortedRows: rows,\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n//\nimport { addActions, actions } from '../actions'\nimport { defaultState } from '../hooks/useTable'\nimport { ensurePluginOrder, safeUseLayoutEffect, expandRows } from '../utils'\n\ndefaultState.pageSize = 10\ndefaultState.pageIndex = 0\n\naddActions('pageChange', 'pageSizeChange')\n\nconst propTypes = {\n  // General\n  manualPagination: PropTypes.bool,\n  paginateExpandedRows: PropTypes.bool,\n}\n\nexport const usePagination = hooks => {\n  hooks.useMain.push(useMain)\n}\n\nusePagination.pluginName = 'usePagination'\n\nfunction useMain(instance) {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'usePagination')\n\n  const {\n    data,\n    rows,\n    manualPagination,\n    disablePageResetOnDataChange,\n    manualExpandedKey = 'expanded',\n    debug,\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: { pageSize, pageIndex, filters, groupBy, sortBy, expanded },\n    setState,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination',\n    []\n  )\n\n  const rowDep = manualPagination ? null : data\n\n  const isPageIndexMountedRef = React.useRef()\n\n  // Bypass any effects from firing when this changes\n  const disablePageResetOnDataChangeRef = React.useRef()\n  disablePageResetOnDataChangeRef.current = disablePageResetOnDataChange\n\n  safeUseLayoutEffect(() => {\n    if (\n      isPageIndexMountedRef.current &&\n      !disablePageResetOnDataChangeRef.current\n    ) {\n      setState(\n        old => ({\n          ...old,\n          pageIndex: 0,\n        }),\n        actions.pageChange\n      )\n    }\n    isPageIndexMountedRef.current = true\n  }, [setState, rowDep, filters, groupBy, sortBy])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () => (pageCount > 0 ? [...new Array(pageCount)].map((d, i) => i) : []),\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      if (process.env.NODE_ENV === 'development' && debug)\n        console.info('getPage')\n\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    debug,\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage = pageCount === -1 || pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    updater => {\n      if (process.env.NODE_ENV === 'development' && debug)\n        console.info('gotoPage')\n      return setState(old => {\n        const newPageIndex =\n          typeof updater === 'function' ? updater(old.pageIndex) : updater\n\n        if (newPageIndex < 0 || newPageIndex > pageCount - 1) {\n          return old\n        }\n        return {\n          ...old,\n          pageIndex: newPageIndex,\n        }\n      }, actions.pageChange)\n    },\n    [debug, pageCount, setState]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      setState(old => {\n        const topRowIndex = old.pageSize * old.pageIndex\n        const pageIndex = Math.floor(topRowIndex / pageSize)\n        return {\n          ...old,\n          pageIndex,\n          pageSize,\n        }\n      }, actions.pageSizeChange)\n    },\n    [setState]\n  )\n\n  return {\n    ...instance,\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n    pageIndex,\n    pageSize,\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport {\n  mergeProps,\n  applyPropHooks,\n  ensurePluginOrder,\n  safeUseLayoutEffect,\n} from '../utils'\nimport { addActions, actions } from '../actions'\nimport { defaultState } from '../hooks/useTable'\n\ndefaultState.selectedRowPaths = []\n\naddActions('toggleRowSelected', 'toggleRowSelectedAll')\n\nconst propTypes = {\n  manualRowSelectedKey: PropTypes.string,\n}\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = []\n  hooks.getToggleAllRowsSelectedProps = []\n  hooks.useRows.push(useRows)\n  hooks.useMain.push(useMain)\n}\n\nuseRowSelect.pluginName = 'useRowSelect'\n\nfunction useRows(rows, instance) {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'useRowSelect')\n\n  const {\n    state: { selectedRowPaths },\n  } = instance\n\n  instance.selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n    rows.forEach(row => {\n      if (row.isAggregated) {\n        const subRowPaths = row.subRows.map(row => row.path)\n        row.isSelected = subRowPaths.every(path =>\n          selectedRowPaths.includes(path.join('.'))\n        )\n      } else {\n        row.isSelected = selectedRowPaths.includes(row.path.join('.'))\n      }\n      if (row.isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectedRowPaths])\n\n  return rows\n}\n\nfunction useMain(instance) {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'useRowSelect')\n\n  const {\n    hooks,\n    manualRowSelectedKey = 'isSelected',\n    disableSelectedRowsResetOnDataChange,\n    plugins,\n    flatRows,\n    data,\n    state: { selectedRowPaths },\n    setState,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy'],\n    'useRowSelect',\n    []\n  )\n\n  const flatRowPaths = flatRows.map(d => d.path.join('.'))\n\n  let isAllRowsSelected = !!flatRowPaths.length && !!selectedRowPaths.length\n\n  if (isAllRowsSelected) {\n    if (flatRowPaths.some(d => !selectedRowPaths.includes(d))) {\n      isAllRowsSelected = false\n    }\n  }\n\n  const isRowSelectedMountedRef = React.useRef()\n\n  // Bypass any effects from firing when this changes\n  const disableSelectedRowsResetOnDataChangeRef = React.useRef()\n  disableSelectedRowsResetOnDataChangeRef.current = disableSelectedRowsResetOnDataChange\n\n  safeUseLayoutEffect(() => {\n    if (\n      isRowSelectedMountedRef.current &&\n      !disableSelectedRowsResetOnDataChangeRef.current\n    ) {\n      setState(\n        old => ({\n          ...old,\n          selectedRowPaths: [],\n        }),\n        actions.pageChange\n      )\n    }\n    isRowSelectedMountedRef.current = true\n  }, [setState, data])\n\n  const toggleRowSelectedAll = set => {\n    setState(old => {\n      const selectAll = typeof set !== 'undefined' ? set : !isAllRowsSelected\n      return {\n        ...old,\n        selectedRowPaths: selectAll ? flatRowPaths : [],\n      }\n    }, actions.toggleRowSelectedAll)\n  }\n\n  const updateParentRow = (selectedRowPaths, path) => {\n    const parentPath = path.slice(0, path.length - 1)\n    const parentKey = parentPath.join('.')\n    const selected =\n      flatRowPaths.filter(rowPath => {\n        const path = rowPath\n        return (\n          path !== parentKey &&\n          path.startsWith(parentKey) &&\n          !selectedRowPaths.has(path)\n        )\n      }).length === 0\n    if (selected) {\n      selectedRowPaths.add(parentKey)\n    } else {\n      selectedRowPaths.delete(parentKey)\n    }\n    if (parentPath.length > 1) updateParentRow(selectedRowPaths, parentPath)\n  }\n\n  const toggleRowSelected = (path, set) => {\n    const key = path.join('.')\n    const childRowPrefixKey = [key, '.'].join('')\n\n    return setState(old => {\n      // Join the paths of deep rows\n      // to make a key, then manage all of the keys\n      // in a flat object\n      const exists = old.selectedRowPaths.includes(key)\n      const shouldExist = typeof set !== 'undefined' ? set : !exists\n      let newSelectedRows = new Set(old.selectedRowPaths)\n\n      if (!exists && shouldExist) {\n        flatRowPaths.forEach(rowPath => {\n          if (rowPath === key || rowPath.startsWith(childRowPrefixKey)) {\n            newSelectedRows.add(rowPath)\n          }\n        })\n      } else if (exists && !shouldExist) {\n        flatRowPaths.forEach(rowPath => {\n          if (rowPath === key || rowPath.startsWith(childRowPrefixKey)) {\n            newSelectedRows.delete(rowPath)\n          }\n        })\n      } else {\n        return old\n      }\n\n      // If the row is a subRow update\n      // its parent row to reflect changes\n      if (path.length > 1) updateParentRow(newSelectedRows, path)\n\n      return {\n        ...old,\n        selectedRowPaths: [...newSelectedRows.values()],\n      }\n    }, actions.toggleRowSelected)\n  }\n\n  const getToggleAllRowsSelectedProps = props => {\n    return mergeProps(\n      {\n        onChange: e => {\n          toggleRowSelectedAll(e.target.checked)\n        },\n        style: {\n          cursor: 'pointer',\n        },\n        checked: isAllRowsSelected,\n        title: 'Toggle All Rows Selected',\n      },\n      applyPropHooks(instance.hooks.getToggleAllRowsSelectedProps, instance),\n      props\n    )\n  }\n\n  hooks.prepareRow.push(row => {\n    // Aggregate rows have entirely different select logic\n    if (row.isAggregated) {\n      const subRowPaths = row.subRows.map(row => row.path)\n      row.toggleRowSelected = set => {\n        set = typeof set !== 'undefined' ? set : !row.isSelected\n        subRowPaths.forEach(path => {\n          toggleRowSelected(path, set)\n        })\n      }\n      row.getToggleRowSelectedProps = props => {\n        let checked = false\n\n        if (row.original && row.original[manualRowSelectedKey]) {\n          checked = true\n        } else {\n          checked = row.isSelected\n        }\n\n        return mergeProps(\n          {\n            onChange: e => {\n              row.toggleRowSelected(e.target.checked)\n            },\n            style: {\n              cursor: 'pointer',\n            },\n            checked,\n            title: 'Toggle Row Selected',\n          },\n          applyPropHooks(\n            instance.hooks.getToggleRowSelectedProps,\n            row,\n            instance\n          ),\n          props\n        )\n      }\n    } else {\n      row.toggleRowSelected = set => toggleRowSelected(row.path, set)\n      row.getToggleRowSelectedProps = props => {\n        let checked = false\n\n        if (row.original && row.original[manualRowSelectedKey]) {\n          checked = true\n        } else {\n          checked = row.isSelected\n        }\n\n        return mergeProps(\n          {\n            onChange: e => {\n              row.toggleRowSelected(e.target.checked)\n            },\n            style: {\n              cursor: 'pointer',\n            },\n            checked,\n            title: 'Toggle Row Selected',\n          },\n          applyPropHooks(\n            instance.hooks.getToggleRowSelectedProps,\n            row,\n            instance\n          ),\n          props\n        )\n      }\n    }\n\n    return row\n  })\n\n  return {\n    ...instance,\n    toggleRowSelected,\n    toggleRowSelectedAll,\n    getToggleAllRowsSelectedProps,\n    isAllRowsSelected,\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { addActions, actions } from '../actions'\nimport { defaultState } from '../hooks/useTable'\n\ndefaultState.rowState = {}\n\naddActions('setRowState', 'setCellState')\n\nconst propTypes = {\n  initialRowStateAccessor: PropTypes.func,\n}\n\nexport const useRowState = hooks => {\n  hooks.useMain.push(useMain)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction useMain(instance) {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'useRowState')\n\n  const {\n    hooks,\n    rows,\n    initialRowStateAccessor,\n    state: { rowState },\n    setState,\n  } = instance\n\n  const setRowState = React.useCallback(\n    (path, updater, action = actions.setRowState) => {\n      const pathKey = path.join('.')\n      return setState(old => {\n        return {\n          ...old,\n          rowState: {\n            ...old.rowState,\n            [pathKey]:\n              typeof updater === 'function'\n                ? updater(old.rowState[pathKey])\n                : updater,\n          },\n        }\n      }, action)\n    },\n    [setState]\n  )\n\n  const setCellState = React.useCallback(\n    (rowPath, columnID, updater) => {\n      return setRowState(\n        rowPath,\n        old => {\n          return {\n            ...old,\n            cellState: {\n              ...old.cellState,\n              [columnID]:\n                typeof updater === 'function'\n                  ? updater(old.cellState[columnID])\n                  : updater,\n            },\n          }\n        },\n        actions.setCellState\n      )\n    },\n    [setRowState]\n  )\n\n  const rowsMountedRef = React.useRef()\n\n  // When data changes, reset row and cell state\n  React.useEffect(() => {\n    if (rowsMountedRef.current) {\n      setState(old => {\n        return {\n          ...old,\n          rowState: {},\n        }\n      }, actions.setRowState)\n    }\n\n    rowsMountedRef.current = true\n  }, [rows, setState])\n\n  hooks.prepareRow.push(row => {\n    const pathKey = row.path.join('.')\n\n    if (row.original) {\n      row.state =\n        (typeof rowState[pathKey] !== 'undefined'\n          ? rowState[pathKey]\n          : initialRowStateAccessor && initialRowStateAccessor(row)) || {}\n\n      row.setState = updater => {\n        return setRowState(row.path, updater)\n      }\n\n      row.cells.forEach(cell => {\n        cell.state = row.state.cellState || {}\n\n        cell.setState = updater => {\n          return setCellState(row.path, cell.column.id, updater)\n        }\n      })\n    }\n\n    return row\n  })\n\n  return {\n    ...instance,\n    setRowState,\n    setCellState,\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { addActions, actions } from '../actions'\nimport { defaultState } from '../hooks/useTable'\n\ndefaultState.columnOrder = []\n\naddActions('setColumnOrder')\n\nconst propTypes = {\n  initialRowStateAccessor: PropTypes.func,\n}\n\nexport const useColumnOrder = hooks => {\n  hooks.columnsBeforeHeaderGroupsDeps.push((deps, instance) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.columnsBeforeHeaderGroups.push(columnsBeforeHeaderGroups)\n  hooks.useMain.push(useMain)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction columnsBeforeHeaderGroups(columns, instance) {\n  const {\n    state: { columnOrder },\n  } = instance\n\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnID = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnID)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useMain(instance) {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'useColumnOrder')\n\n  const { setState } = instance\n\n  const setColumnOrder = React.useCallback(\n    updater => {\n      return setState(old => {\n        return {\n          ...old,\n          columnOrder:\n            typeof updater === 'function' ? updater(old.columnOrder) : updater,\n        }\n      }, actions.setColumnOrder)\n    },\n    [setState]\n  )\n\n  return {\n    ...instance,\n    setColumnOrder,\n  }\n}\n","import PropTypes from 'prop-types'\n\n//\n\nimport { defaultState } from '../hooks/useTable'\nimport { defaultColumn, getFirstDefined } from '../utils'\nimport { mergeProps, applyPropHooks } from '../utils'\n\ndefaultState.columnResizing = {\n  columnWidths: {},\n}\n\ndefaultColumn.canResize = true\n\nconst propTypes = {}\n\nexport const useResizeColumns = hooks => {\n  hooks.useBeforeDimensions.push(useBeforeDimensions)\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nconst useBeforeDimensions = instance => {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'useResizeColumns')\n\n  instance.hooks.getResizerProps = []\n\n  const {\n    flatHeaders,\n    disableResizing,\n    hooks: { getHeaderProps },\n    state: { columnResizing },\n    setState,\n  } = instance\n\n  getHeaderProps.push(() => {\n    return {\n      style: {\n        position: 'relative',\n      },\n    }\n  })\n\n  const onMouseDown = (e, header) => {\n    const headersToResize = getLeafHeaders(header)\n    const startWidths = headersToResize.map(header => header.totalWidth)\n    const startX = e.clientX\n\n    const onMouseMove = e => {\n      const currentX = e.clientX\n      const deltaX = currentX - startX\n\n      const percentageDeltaX = deltaX / headersToResize.length\n\n      const newColumnWidths = {}\n      headersToResize.forEach((header, index) => {\n        newColumnWidths[header.id] = Math.max(\n          startWidths[index] + percentageDeltaX,\n          0\n        )\n      })\n\n      setState(old => ({\n        ...old,\n        columnResizing: {\n          ...old.columnResizing,\n          columnWidths: {\n            ...old.columnResizing.columnWidths,\n            ...newColumnWidths,\n          },\n        },\n      }))\n    }\n\n    const onMouseUp = e => {\n      document.removeEventListener('mousemove', onMouseMove)\n      document.removeEventListener('mouseup', onMouseUp)\n\n      setState(old => ({\n        ...old,\n        columnResizing: {\n          ...old.columnResizing,\n          startX: null,\n          isResizingColumn: null,\n        },\n      }))\n    }\n\n    document.addEventListener('mousemove', onMouseMove)\n    document.addEventListener('mouseup', onMouseUp)\n\n    setState(old => ({\n      ...old,\n      columnResizing: {\n        ...old.columnResizing,\n        startX,\n        isResizingColumn: header.id,\n      },\n    }))\n  }\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width = columnResizing.columnWidths[header.id] || header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = userProps => {\n        return mergeProps(\n          {\n            onMouseDown: e => e.persist() || onMouseDown(e, header),\n            style: {\n              cursor: 'ew-resize',\n            },\n            draggable: false,\n          },\n          applyPropHooks(instance.hooks.getResizerProps, header, instance),\n          userProps\n        )\n      }\n    }\n  })\n\n  return instance\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","import PropTypes from 'prop-types'\n\nconst propTypes = {}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.useMain.push(useMain)\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst useMain = instance => {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'useAbsoluteLayout')\n\n  const {\n    totalColumnsWidth,\n    hooks: {\n      getRowProps,\n      getTableBodyProps,\n      getHeaderGroupProps,\n      getHeaderProps,\n      getCellProps,\n    },\n  } = instance\n\n  const rowStyles = {\n    style: {\n      position: 'relative',\n      width: `${totalColumnsWidth}px`,\n    },\n  }\n\n  getTableBodyProps.push(() => rowStyles)\n  getRowProps.push(() => rowStyles)\n  getHeaderGroupProps.push(() => rowStyles)\n\n  // Calculating column/cells widths\n  const cellStyles = {\n    position: 'absolute',\n    top: 0,\n  }\n\n  getHeaderProps.push(header => {\n    return {\n      style: {\n        ...cellStyles,\n        left: `${header.totalLeft}px`,\n        width: `${header.totalWidth}px`,\n      },\n    }\n  })\n\n  getCellProps.push(cell => {\n    return {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    }\n  })\n\n  return instance\n}\n","import PropTypes from 'prop-types'\n\nconst propTypes = {}\n\nexport const useBlockLayout = hooks => {\n  hooks.useMain.push(useMain)\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n\nconst useMain = instance => {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'useBlockLayout')\n\n  const {\n    totalColumnsWidth,\n    hooks: { getRowProps, getHeaderGroupProps, getHeaderProps, getCellProps },\n  } = instance\n\n  const rowStyles = {\n    style: {\n      display: 'flex',\n      width: `${totalColumnsWidth}px`,\n    },\n  }\n\n  getRowProps.push(() => rowStyles)\n  getHeaderGroupProps.push(() => rowStyles)\n\n  const cellStyles = {\n    display: 'inline-block',\n    boxSizing: 'border-box',\n  }\n\n  getHeaderProps.push(header => {\n    return {\n      style: {\n        ...cellStyles,\n        width: `${header.totalWidth}px`,\n      },\n    }\n  })\n\n  getCellProps.push(cell => {\n    return {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    }\n  })\n\n  return instance\n}\n","import React from \"react\";\nimport { useTable, useSortBy } from 'react-table';\n\nfunction SortedTable({ columns, data}) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data\n  }, useSortBy);\n\n  const theadRows = headerGroups.map(headerGroup => (\n    <tr {...headerGroup.getHeaderGroupProps()}>\n      {headerGroup.headers.map(column => (\n        <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n          {column.render('Header')}\n\n          <span>\n            {column.isSorted\n              ? column.isSortedDesc\n                ? ' 🔽'\n                : ' 🔼'\n              : ''}\n          </span>\n        </th>\n      ))}\n    </tr>\n  ));\n\n  const tbodyRows = rows.map((row, i) => (\n    prepareRow(row) || <tr {...row.getRowProps()}>\n      {row.cells.map(cell => (\n        <td {...cell.getCellProps()}>\n          {cell.render('Cell')}\n        </td>\n      ))}\n    </tr>\n  ));\n\n  return <table {...getTableProps()}>\n    <thead>\n      {theadRows}\n    </thead>\n    <tbody {...getTableBodyProps()}>\n      {tbodyRows}\n    </tbody>\n  </table>;\n}\n\nexport default SortedTable;","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport SortedTable from \"./SortedTable\";\n\nconst columns = [\n  {\n    Header: 'Name',\n    columns: [\n      {\n        Header: 'First Name',\n        accessor: 'firstName',\n      },\n      {\n        Header: 'Last Name',\n        accessor: 'lastName',\n      },\n    ],\n  },\n  {\n    Header: 'Info',\n    columns: [\n      {\n        Header: 'Age',\n        accessor: 'age',\n      },\n      {\n        Header: 'Visits',\n        accessor: 'visits',\n      },\n      {\n        Header: 'Status',\n        accessor: 'status',\n      },\n      {\n        Header: 'Profile Progress',\n        accessor: 'progress',\n      },\n    ],\n  }\n];\n\nconst data = makeData(20);\n\nfunction Simple() {\n  return <Style>\n    <SortedTable\n      columns={columns}\n      data={data}\n    />\n  </Style>;\n}\n\nconst Style = styled.div`\n  width: 100%;\n\n  table {\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 0;\n\n    thead {\n      tr { \n        th {\n          background: white;\n          position: sticky;\n          top: 0;\n          z-index: 10;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      border: 1px solid #dbdbdb;\n      border-width: 0 0 1px;\n      padding: .5em .75em;\n      vertical-align: top;\n\n    }\n  }\n`;\n\nfunction makeData(len) {\n  return [...Array(len)].map(d => {\n    const statusChance = Math.random()\n    return {\n      firstName: 'Gustavo',\n      lastName: 'Novaes',\n      age: Math.floor(Math.random() * 30),\n      visits: Math.floor(Math.random() * 100),\n      progress: Math.floor(Math.random() * 100),\n      status:\n        statusChance > 0.66\n          ? 'relationship'\n          : statusChance > 0.33\n            ? 'complicated'\n            : 'single',\n    };\n  })\n}\n\nexport default Simple;","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}